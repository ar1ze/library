@use 'variables' as *;

@mixin set-size($size) {
  width: $size;
  height: $size;
  min-width: $size;
}

@mixin apply-interactive-transition {
  transition: background 200ms ease, opacity 200ms ease, transform 100ms ease;
}

@mixin apply-hover-state(
  $bg: null,
  $border: null,
  $opacity: null,
  $cursor: null
) {
  &:hover {
    @if $bg {
      background: $bg;
    }
    @if $border {
      border: $border;
    }
    @if $opacity {
      opacity: $opacity;
    }
    @if $cursor {
      cursor: $cursor;
    }
  }
}

@mixin apply-hover-shadow($shadow: $shadow-sm) {
  &:hover {
    box-shadow: $shadow;
  }
}

@mixin apply-hover-transform($transform: translateX(2px)) {
  &:hover {
    transform: $transform;
  }
}

@mixin apply-active-transform($scale: 0.98) {
  &:active {
    transform: scale($scale);
  }
}

@mixin apply-focus-ring($focus-color) {
  &:focus-visible {
    outline: $border-width-thin solid $focus-color;
    outline-offset: 2px;
  }
}

@mixin on-parent-hover-transform(
  $parent-selector,
  $transform: translateX(2px)
) {
  transition: transform 150ms ease;

  #{$parent-selector}:hover & {
    transform: $transform;
  }
}

@mixin draw-dashed-border(
  $color: $color-blue,
  $width: $border-width-medium,
  $dash: 8px,
  $gap: 8px
) {
  $total: $dash + $gap;

  background-image: repeating-linear-gradient(
      0deg,
      $color 0,
      $color $dash,
      transparent $dash,
      transparent $total
    ),
    repeating-linear-gradient(
      90deg,
      $color 0,
      $color $dash,
      transparent $dash,
      transparent $total
    ),
    repeating-linear-gradient(
      180deg,
      $color 0,
      $color $dash,
      transparent $dash,
      transparent $total
    ),
    repeating-linear-gradient(
      270deg,
      $color 0,
      $color $dash,
      transparent $dash,
      transparent $total
    );

  background-size: $width 100%, 100% $width, $width 100%, 100% $width;
  background-position: 0 0, 0 0, 100% 0, 0 100%;
  background-repeat: no-repeat;
}

@mixin dialog-animation($duration: 0.25s, $backdrop-color: rgba(0, 0, 0, 0.5)) {
  opacity: 0;
  transform: scale(0.95);
  transition: opacity $duration ease-out, transform $duration ease-out,
    overlay $duration ease-out allow-discrete,
    display $duration ease-out allow-discrete;

  &:open {
    opacity: 1;
    transform: scale(1);
  }

  @starting-style {
    &:open {
      opacity: 0;
      transform: scale(0.95);
    }
  }

  &::backdrop {
    transition: background-color $duration ease-out;
  }

  &:open::backdrop {
    background-color: $backdrop-color;
  }

  @starting-style {
    &:open::backdrop {
      background-color: transparent;
    }
  }
}
